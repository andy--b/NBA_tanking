print(path);
print(nam);
nam = paste(team[1], as.character(1), sep = '_');
nam = paste(team[1], as.character(2005), sep = '_');
game_data[nam] = team_data;
game_data[nam]
rm(game_data)
game_data[nam] = team_data;
game_data = list()
game_data[nam] = team_data;
class(team_data)
game_data[[nam]] = team_data;
game_data[[nam]]
rm(ls=all)
ls()
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = T);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print(path);
print(nam);
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = T);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print(path);
print(nam);
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = T);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print("Now reading: ", path);
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = T);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print(paste("Now reading:", path));
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = T);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
# Clean up data a little bit. Remove useless/blank columns, get headers right
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print(paste("Now Reading:", path));
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
print("Reading Complete.")
game_data[[NOP_2015]][1:5,]
game_data[[NOP_2015]]
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = T);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
# Clean up data a little bit. Remove useless/blank columns, get headers right
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print(paste("Now Reading:", path));
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
print("Reading Complete.")
print nam
print(name)
print(nam)
game_data[["NOP_2015"]]
game_data[["NOP_2015"]][1:5,]
game_data[[]][63,]
game_data[][63,]
game_data[["NOP_2015"]][c(21,42,63,84),]
a=5
a=(5)
a
a.append(4)
a=[5]
a=c(5)
a.append(4)
len(game_data[[]])
length(game_data[[]])
length(game_data)
names(game_data)
length(team)
# Read csv which has 3 columns
# First column has team abbrev
# 2nd has start year
# 3rd has end year
input_data = read.csv("C:/Projects/NBA/teams_formatted.csv", header = F);
# We're storing all of our tables in a single list for easy referencing.
game_data = list();
# Assign variables for easy use
team = input_data[,1];
start_year = input_data[,2];
end_year = input_data[,3];
# Iterate through each team and year, assign list element
for(t in 1:length(team)) {
for (y in start_year[t] : end_year[t]) {
# Set path for reading file, name for list item
path = paste("C:/Projects/NBA/game_data/", team[t],
"/teams_", team[t], "_", as.character(y), "_games_teams_games.csv",
sep = '')
nam = paste(team[t], as.character(y), sep = '_');
# Clean up data a little bit. Remove useless/blank columns, get headers right
raw_team_data = read.csv(path, header = T);
raw_team_data = droplevels(raw_team_data);
team_data = raw_team_data[,c("G","Date","Opponent","Tm","Opp","W","L","Streak")];
print(paste("Now Reading:", path));
game_data[[nam]] = team_data;
y = y + 1;
}
t = t + 1;
}
print("Reading Complete.")
length(game_data)
game_data
5/2
int(5/2)
as.integer(5/2)
y = c(1,2,3) * 21
y
b = 3
a = c(1:b)
a
a = list()
a = data.frame()
a = data.frame(c(1,2,3),c(4,5,6))
a
a[-1]
sedwd('c:/projects/nba')
setwd('c:/projects/nba')
source('read_files.r')
game_data[['NOP_2015']]
game_data[['NOP_2015']][-84]
game_data[['NOP_2015']][-84,]
game_data['NOP_2015'][-84,]
game_data[['NOP_2015']][-83,]
source('read_files.r')
game_data[['NOP_2015']]
game_data[['NOP_2015']][-84]
game_data[['NOP_2015']][-84,]
game_data[['NOP_2015']][1,]
number_headers = as.integer(length(game_data[['NOP_2015']])/21);
number_headers
number_headers = as.integer(nrow(game_data[['NOP_2015']])/21);
number_headers
source('read_files.r')
game_data[['NOP_2015']][1,]
game_data[['NOP_2015']]
game_data[['NOP_2015']][82,]
game_data[['NOP_2015']][nrow(game_data[['NOP_2015']])-28,]
game_data[['NOP_2015']][,'W']
droplevels(game_data[['NOP_2015']][,'W'])
droplevels(game_data[['NOP_2015']])
droplevels(game_data)
source('read_files.r')
droplevels(game_data[['NOP_2015']][,'W'])
game_data[['NOP_2015']][,'W'][1]
game_data[['NOP_2015']][,'W'][1] + 5
as.integer(game_data[['NOP_2015']][,'W'][1])
droplevels(game_data[['NOP_2015']][,'W'])
droplevels(game_data[['NOP_2015']])
game_data[['NOP_2015']]
droplevels(game_data[['NOP_2015']])[,'W']
drop.levels(game_data[['NOP_2015']])[,'W']
install.packages("gdata")
drop.levels(game_data[['NOP_2015']])[,'W']
library(gdata)
drop.levels(game_data[['NOP_2015']])[,'W']
drop.levels(game_data[['NOP_2015']])
source('read_files.r')
source('read_files.r')
game_data[['NOP_2015']][,'W']
game_data[['NOP_2015']][,'W'] = as.integer(game_data[['NOP_2015']][,'W'])
game_data[['NOP_2015']][,'W']
game_data[['NOP_2015']]
game_data[['NOP_2015']][,c("G","Tm","Opp","W","L",)] = as.integer(game_data[['NOP_2015']][,c("G","Tm","Opp","W","L",)])
game_data[['NOP_2015']][,c("G","Tm","Opp","W","L")] = as.integer(game_data[['NOP_2015']][,c("G","Tm","Opp","W","L")])
game_data[['NOP_2015']][,"G"] = as.integer(game_data[['NOP_2015']][,"G"])
for (i in c("bacon","food","poo")) {print(i)}
source('read_data'.r)
source('read_data.r')
source('read_files.r')
source('read_files.r')
source('read_files.r')
game_data[['NOP_2015']][,'W']
game_data[['NOP_2015']]
blah = data.frame()
blah[1,3] = 'bacon'
blah[1,1] = 'bacon'
blah[1,2] = 'bacn'
blah[1,] = 'bac'
blah[1,3] = 'bac'
blah[1,2] = 'bacn'
blah[1,1] = 'bacon'
blah
names(blah)
names(blah) = c('G','W','L')
blah[2,'G'] = 'soup'
blah
blah[2,'L'] = 'soup'
blah
source('aggregate_data.r')
test_frame = data.frame()
names(test_frame) = c('team','mid_wins', 'mid_losses', 'mid_percent', 'expected_wins',
'total_wins', 'total_losses', 'total_percent', 'actual_v_expected');
test_frame = data.frame(names=c('bacon', 'soup'))
test_frame
test_frame = data.frame(names, food, soup)
test_frame = data.frame('names','soup','food')
test_frame
test_frame = data.frame(a=numeric(0), b=numeric(0))
test_frame
test_frame[1] = c('bacon','salad')
test_frame[1,] = c('bacon','salad')
test_frame
a = "bacon"
class(a)
class(6)
class(6.5)
class(as.integer(6))
a = as.integer(6)
b = as.integer(5)
a/b
aggr_data = data.frame(team = character(0), mid_wins = integer(0),
mid_losses = integer(0), mid_percent = numeric(0), expected_wins = numeric(0),
total_wins = integer(0), total_losses = integer(0), total_percent = numeric(0),
actual_v_expected = numeric(0) );
aggr_data[1,] = c('soup',5,4,3.44,3,6,22,.578,53.5)
aggr_data[1,'team'] = 'soup'
aggr_data = data.frame(setnames(c('team','mid_wins', 'mid_losses', 'mid_percent', 'expected_wins',
'total_wins', 'total_losses', 'total_percent', 'actual_v_expected')))
aggr_data = data.frame(setNames(c('team','mid_wins', 'mid_losses', 'mid_percent', 'expected_wins',
'total_wins', 'total_losses', 'total_percent', 'actual_v_expected')))
aggr_data = data.frame(team = character(0), mid_wins = integer(0),
mid_losses = integer(0), mid_percent = numeric(0), expected_wins = numeric(0),
total_wins = integer(0), total_losses = integer(0), total_percent = numeric(0),
actual_v_expected = numeric(0), stringsAsFactors = F );
aggr_data[1,'team'] = 'soup'
aggr_data[1,] = c('soup',5,4,3.44,3,6,22,.578,53.5)
aggr_data[1,]
source('aggregate_data.r')
source('aggregate_data.r')
source('aggregate_data.r')
aggr_data[1:100,]
source('aggregate_data.r')
source('aggregate_data.r')
aggr_data[1:100,]
source('aggregate_data.r')
team[te]
team[te-1]
team[te-1][1]
as.characher(team[te-1])
as.character(team[te-1])
source('aggregate_data.r')
aggr_data[1:100,]
game_data[['NOP_2015']]
source('aggregate_data.r')
aggr_data[1:100,]
data2 = aggr_data[order(year,mid_wins)]
data2 = aggr_data[order(aggr_data$year,aggr_data$mid_wins)]
data2 = aggr_data[order(aggr_data[,year],aggr_data[,mid_wins])]
names(aggr_data)
data2 = aggr_data[order(aggr_data[year],aggr_data[mid_wins])]
aggr_data[,yesr]
aggr_data[,year]
aggr_data[,"year"]
data2 = aggr_data[order(aggr_data['year'],aggr_data['mid_wins'])]
data2 = aggr_data[order(aggr_data[,'year'],aggr_data[,'mid_wins'])]
data2 = aggr_data[order("year"],"mid_wins"]
data2 = aggr_data[order("year","mid_wins")]
data2[1:50,]
data2 = aggr_data[order("year","mid_wins",)]
data2 = aggr_data[order("year","mid_wins"),]
data2[1:50,]
data2 = aggr_data[order(aggr_data[,"year"],aggr_data[,"mid_wins"]),]
data2[1:50,]
data2["year" = 1991,]
data2[year = 1991,]
data2[data2[,"year"] = 1991,]
data2[data2[,"year"] == 1991,]
data2[data2[,"year"] == 1991,][1:16,]
data2[data2[,"year"] == 1991,][-(1:16),]
losers91[data2[,"year"] == 1991,][-(1:16),]
losers91=[data2[,"year"] == 1991,][-(1:16),]
losers91=[data2[,"year"] == 1991][-(1:16),]
source('aggregate_data.r')
aggr_data[1:50,]
aggr_data = aggr_data[order(aggr_data[,"year"],aggr_data[,"mid_wins"]),]
aggr_data[1:50,]
source('aggregate_data.r')
aggr_data[1:50,]
source('aggregate_data.r')
aggr_data[aggr_data[,"team" == PHL],]
aggr_data[aggr_data[,"team" == PHI],]
aggr_data[aggr_data[,"team" == 'PHI'],]
aggr_data[aggr_data[,"team"] == 'PHI',]
source('aggregate_data.r')
aggr_data[aggr_data[,"team"] == 'PHI',]
game_data[[PHI_2015]]
game_data[[PHI_1990]]
game_data[[PHI_2015]]
game_data[[CLE_2010]]
names(game_data)
game_data[['PHI_2015']]
source('read_files.r')
source('aggregate_data.r')
aggr_data[aggr_data[,"team"] == 'PHI',]
source('aggregate_data.r')
aggr_data[aggr_data[,"team"] == 'PHI',]
source('aggregate_data.r')
aggr_data[1:50,]
aggr_data2[1:50,]
aggr_data2 = aggr_data[order(aggr_data[,"mid_wins"]),]
aggr_data2[1:50,]
source('aggregate_data.r')
aggr_data[1:50,]
source('aggregate_data.r')
aggr_data[1:50,]
aggr_data[,"has_pick"] = 'Y'
aggr_data[1:50,]
aggr_data[aggr_data[,"year"] == 1990 & aggr_data[,"mid_wins"] < (aggr_data[16,"mid_wins"] - 5),]
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] < (aggr_data[16,"mid_wins"] - 5),]
aggr_data[aggr_data[,"year"] == 1991,]
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] < (aggr_data[aggr_data[,"year"] == 1991][16],"mid_wins"] - 5),]
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] < (aggr_data[aggr_data[,"year"] == 1991, "mid_wins"][16]) - 5),]
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] < (aggr_data[aggr_data[,"year"] == 1991, "mid_wins"][16] - 5)),]
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] < (aggr_data[aggr_data[,"year"] == 1991, "mid_wins"][16] - 5),]
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] <= (aggr_data[aggr_data[,"year"] == 1991, "mid_wins"][16] - 5),]
source('read_data.r')
source('read_files.r')
rm(game_data)
source('read_files.r')
remove(list=ls())
source('read_files.r')
remove(list=ls())
source('read_files.r')
source('aggregate_data.r')
a=c(3,4,5)
a = data.frame(b = c(7,5,4), di = c(19,15,12))
a
b = data.frame(b = c(7,5,4), di = c(19,15,12))
a[4:6,] = b
a
aggr_data[aggr_data[,"year"] == 1991 & aggr_data[,"mid_wins"] <= (aggr_data[aggr_data[,"year"] == 1991, "mid_wins"][16] - 5),]
source('loser_list.r')
source('loser_list.r')
source('loser_list.r')
warnings()
warnings()
source('loser_list.r')
source('loser_list.r')
loser_list
loser_data
source('loser_list.r')
source('loser_list.r')
loser_data
loser_data[1:20,]
source('loser_list.r')
loser_data[1:20,]
source('loser_list.r')
source('aggregate_data.r')
source('loser_list.r')
loser_data[loser_data[,"year"] == 2015,]
source('loser_list.r')
source('loser_list.r')
source('loser_list.r')
source('loser_list.r')
loser_data[loser_data[,"year"] == 2015,]
loser_data[1:20,]
source('loser_list.r')
loser_data[1:20,]
source('loser_list.r')
source('loser_list.r')
source('loser_list.r')
source('loser_list.r')
loser_data[1:20,]
aggr_data[aggr_data[,"year"] == 1990]
aggr_data[aggr_data[,"year"] == 1990,]
loser_data[1:20,]
aggr_data[aggr_data[,"year"] == 1990]
aggr_data[aggr_data[,"year"] == 1990,]
source('loser_list.r')
aggr_data[aggr_data[,"year"] == 1990,]
loser_data[1:20,]
